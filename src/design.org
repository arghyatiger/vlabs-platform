#+TITLE: Design of Virtual Labs platform
#+AUTHOR: VLEAD
#+DATE: [2016-11-08 Tue]
#+SETUPFILE: ./org-templates/level-0.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil


* Introduction 
  The =design= of the =Content Delivery Adapters= is captured here.

* Design
  The design of the platform flows from this diagram.
#+BEGIN_HTML
<img src="https://docs.google.com/drawings/d/e/2PACX-1vTEiwPdyaMR3h9jmGLwbHYLZ1ajJQN2G9u1K5OXx3c8MjsOQbNrS8njjxLiMSSHsE45QExAuPOttC4F/pub?w=967&h=708">
<p align="center"> Platform with Content Server </p>
#+END_HTML

 Click [[https://docs.google.com/drawings/d/1s_expWC1QOMXOHgLJHW40OB04FvJt--1vwpSVjhdoGY/edit?ts=5834280f][=here=]] to edit the image.

* Specification as a glue
  Every experiment and a lab has a specification.  The experiment specification
  provides a unique ID, name, and other meta information about the contents an
  experiment. contents of an experiment and other meta information of either a
  lab or experiment.  This information includes: developer details, the
  organization a lab belongs to.  This specification is different from the
  deployment specification of an experiment.

** Experiment Specification  
   An experiment is a basic functional unit of virtual labs.  An experiment is
   a combination of static content and simulation.  Each experiment is
   identified by a unique id, name, organization, etc. 

  #+BEGIN_EXAMPLE
  {
    "experiment": {
      "id": "e99847",
      "name": "Parallel and distributed processing",
      "overview": "This deals with eliciting how parallel and distributed processing is done",
      "sections": [
        "Introduction",
        "Objective",
        "Tutorial",
        "Illustration",
        "Procedure",
        "Experiment",
        "Observations",
        "Assignment",
        "References"
      ]
    },
    "content-type": "org"
  }
  #+END_EXAMPLE

** Lab Specification  
   A lab is collation of experiments.  A lab is identified by a unique id.  The
   lab specification contains this identifier along with name, organization,
   etc.  The experiments in a lab are specified by including their respective
   ids.

   #+BEGIN_EXAMPLE
   {
     "lab": {
       "id": "cse02",
       "name": "Computer Programming",
       "overview": "This lab deals with computer programming",
       "sections": [
         {
           "name": "Introduction"
         },
         {
           "experiments": [
             "e100",
             "e200"
           ]
         }
       ]
     },
     "content-type": "org"
   }
   #+END_EXAMPLE
    
** Translators
   Translators is a service.  Given an experiment specification, 

** Process
   An experiment or a lab developer 

** Resource to ID Mapper
   Given an experiment id, resource ids are generated and mapped to
   each resource.  This map is in json format.

   Microservice LDS provides the API that returns this mapping. The input to
   the API is the id of the experiment, here in this example it is =e99847= and
   output is the resource to id map.

  #+BEGIN_EXAMPLE
  {
    "experiment_resource_map": {
      "name": "e99847-name",
      "overview": "e99847-overview",
      "Introduction" : "e99847-intro",
      "Objective"  : "e99847-objective",
      "Tutorial"   : "e99847-tutorial",
      "Illustration" : "e99847-illustration",
      "Procedure"    : "e99847-procedure",
      "Experiment"   : "e99847-experiment",
      "Observations" : "e99847-observations",
      "Assignment"   : "e99847-assignment",
      "References"   : "e99847-references"
    }
  }
  #+END_EXAMPLE


** Generate html files from a github repo containing either org/md files
   Whenever an experiment repository is tagged or committed on master branch,
   an API call is made to a service which builds the repository.  Building of
   repository ensures all the files in a markup language (here either in md or
   org) are converted to html. 


