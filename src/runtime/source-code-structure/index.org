#+TITLE: Source Code Structure generator
#+AUTHOR: VLEAD
#+DATE:  [2016-11-30 Wed]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document describes how to create the directory structure for a lab by
  extracting the data from lab specification file(json objects). 
* How to run
  This file accepts 2 inputs:
  1) path to json file containing lab specification
  2) path to folder that will hold the directory structure
#+BEGIN_EXAMPLE
   python json-struct.py [$HOME]/labspec.json [$HOME]/dirWithSrcFolder
#+END_EXAMPLE

* Implementation
** imports
   imports os, json, re and sys
#+BEGIN_SRC python :tangle json-struct.py
import sys, os, json, re
#+END_SRC

** Create folder
   Checks for valid path and creates folder
#+BEGIN_SRC python :tangle json-struct.py
def safe_make_folder(path):
           try:
                  os.mkdir(path)
           except Exception as error:
                  print ('Error : ' + str(error))
#+END_SRC

** Extract Experiments
   Extracts experiments from json object, takes python dictionary of json object as input
#+BEGIN_SRC python :tangle json-struct.py
def experiments(data_dict):
          try:
                  exps = data_dict.get('experiments')
          except Exception as error:
                     print('Error: '+str(error))
          return exps
#+END_SRC

** Naming the created folders
   All non-alphanumeric characters are dropped and spaces are replaced with hyphen
#+BEGIN_SRC python :tangle json-struct.py
def editName(name):
          name = name.lower()
          newName = re.sub(r'[^a-z0-9A-Z\s+-]', '', name)
          newName = newName.strip()
          finalName = re.sub('\s+', '-', newName)
          return finalName

#+END_SRC
** Create files
   Creates files corresponding to lab spec file
#+BEGIN_SRC python :tangle json-struct.py
def createFiles(exps, srcPath):
          n = len(exps)
          for i in range(0,n):
                  expName = exps[i].get('name')
                  fname = editName(expName)
                  tmpPath = srcPath + '/' + fname
                  safe_make_folder(tmpPath)
                  subsec = exps[i].get('subsections')
                  m = len(subsec)
                  for j in range(0,m):
                          fileName = subsec[j].get('name')
                          fileName = editName(fileName)
                          filePath = tmpPath + '/' + fileName + '.org'
                          open(filePath, 'a').close()
#+END_SRC

* Execution
** main
   Takes path to json file and path to directory in which src folder is to be created
#+BEGIN_SRC python :tangle json-struct.py
if __name__ == '__main__':
          try:                  
                 labSpecPath = sys.argv[1]
                 dirStructPath = sys.argv[2]
                 dirStructPath = dirStructPath +'/src'
                 os.mkdir(dirStructPath)
          except Exception as error:
                 if error == OSError:
                       pass
          with open(labSpecPath) as data_file:
                  data = json.load(data_file)
          exps = experiments(data)
          createFiles(exps, dirStructPath)
#+END_SRC


